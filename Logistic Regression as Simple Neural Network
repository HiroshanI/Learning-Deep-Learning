{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.13","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":11071,"sourceType":"datasetVersion","datasetId":7836}],"dockerImageVersionId":30702,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"import numpy as np\nimport pandas as pd\nimport matplotlib.pyplot as plt","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","execution":{"iopub.status.busy":"2024-04-25T11:56:25.920375Z","iopub.execute_input":"2024-04-25T11:56:25.921252Z","iopub.status.idle":"2024-04-25T11:56:27.305031Z","shell.execute_reply.started":"2024-04-25T11:56:25.921203Z","shell.execute_reply":"2024-04-25T11:56:27.303654Z"},"trusted":true},"execution_count":1,"outputs":[]},{"cell_type":"markdown","source":"# Preprocess Data","metadata":{}},{"cell_type":"code","source":"data = np.load('/kaggle/input/sign-language-digits-dataset/X.npy')\nlabels = np.load('/kaggle/input/sign-language-digits-dataset/Y.npy')\n\nplt.subplot(1, 2, 1)\nplt.imshow(data[260])\nplt.title(0)\nplt.axis('off')\nplt.subplot(1, 2, 2)\nplt.imshow(data[900])\nplt.title(1)\nplt.axis('off')\nplt.show()","metadata":{"execution":{"iopub.status.busy":"2024-04-25T12:00:20.502265Z","iopub.execute_input":"2024-04-25T12:00:20.502713Z","iopub.status.idle":"2024-04-25T12:00:20.888834Z","shell.execute_reply.started":"2024-04-25T12:00:20.502677Z","shell.execute_reply":"2024-04-25T12:00:20.887522Z"},"trusted":true},"execution_count":8,"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 640x480 with 2 Axes>","image/png":""},"metadata":{}}]},{"cell_type":"markdown","source":"## Binary classification\nResult:\n- X contains 410 images\n- Each image has size 64 x 64 (pixels) = 4096","metadata":{}},{"cell_type":"code","source":"# Only get 0s and 1s\nX = np.concatenate((data[204:409], data[822:1027] ), axis=0)\nY = np.concatenate((np.zeros(205), np.ones(205)), axis=0).reshape(X.shape[0],1)\nprint(\"X shape: \" , X.shape)\nprint(\"Y shape: \" , Y.shape)","metadata":{"execution":{"iopub.status.busy":"2024-04-25T12:22:49.336779Z","iopub.execute_input":"2024-04-25T12:22:49.337605Z","iopub.status.idle":"2024-04-25T12:22:49.350116Z","shell.execute_reply.started":"2024-04-25T12:22:49.337563Z","shell.execute_reply":"2024-04-25T12:22:49.349062Z"},"trusted":true},"execution_count":23,"outputs":[{"name":"stdout","text":"X shape:  (410, 64, 64)\nY shape:  (410, 1)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Split Data\nResult:\n- Data for training model : 348 Images\n- Data for testing model : 62 Images","metadata":{}},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\n\nX_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.15, random_state=42)\nprint(f\"Train Images: \\t{X_train.shape}\", f\"Test Images: \\t{X_test.shape}\", sep='\\n')","metadata":{"execution":{"iopub.status.busy":"2024-04-25T12:22:53.572685Z","iopub.execute_input":"2024-04-25T12:22:53.573476Z","iopub.status.idle":"2024-04-25T12:22:53.586171Z","shell.execute_reply.started":"2024-04-25T12:22:53.573435Z","shell.execute_reply":"2024-04-25T12:22:53.584690Z"},"trusted":true},"execution_count":24,"outputs":[{"name":"stdout","text":"Train Images: \t(348, 64, 64)\nTest Images: \t(62, 64, 64)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"## Flatten and Transpose \nResult:\n- Data is now 2-dimensional \n    - Training data : (348, 64, 64)  ->  (348, 4096)\n    - Testing data : (62, 64, 64)  ->  (62, 4096)\n- Data is now transposed (prepared to be fed to model)\n    - Training data:    \n        - (348, 4096) -> (4096, 348) \n        - (348, 1) -> (1, 348)","metadata":{}},{"cell_type":"code","source":"IMAGE_SIZE = 64 * 64 # 4096\nX_train_flatten = X_train.reshape(X_train.shape[0], IMAGE_SIZE)\nX_test_flatten = X_test .reshape(X_test.shape[0], IMAGE_SIZE)\nprint(f\"Flattened (2D) Train Images: \\t{X_train_flatten.shape}\", \n      f\"Flattened (2D) Test Images: \\t{X_test_flatten.shape}\", \n      sep='\\n')","metadata":{"execution":{"iopub.status.busy":"2024-04-25T12:22:54.004815Z","iopub.execute_input":"2024-04-25T12:22:54.005638Z","iopub.status.idle":"2024-04-25T12:22:54.013494Z","shell.execute_reply.started":"2024-04-25T12:22:54.005595Z","shell.execute_reply":"2024-04-25T12:22:54.012205Z"},"trusted":true},"execution_count":25,"outputs":[{"name":"stdout","text":"Flattened (2D) Train Images: \t(348, 4096)\nFlattened (2D) Test Images: \t(62, 4096)\n","output_type":"stream"}]},{"cell_type":"code","source":"x_train = X_train_flatten.T\nx_test = X_test_flatten.T\ny_train = Y_train.T\ny_test = Y_test.T\nprint(\"X: \",x_train.shape, x_test.shape)\nprint(\"Y: \",y_train.shape, y_test.shape)","metadata":{"execution":{"iopub.status.busy":"2024-04-25T12:22:54.208305Z","iopub.execute_input":"2024-04-25T12:22:54.208767Z","iopub.status.idle":"2024-04-25T12:22:54.217598Z","shell.execute_reply.started":"2024-04-25T12:22:54.208731Z","shell.execute_reply":"2024-04-25T12:22:54.216164Z"},"trusted":true},"execution_count":26,"outputs":[{"name":"stdout","text":"X:  (4096, 348) (4096, 62)\nY:  (1, 348) (1, 62)\n","output_type":"stream"}]},{"cell_type":"markdown","source":"","metadata":{}},{"cell_type":"code","source":"def initialize_weights_and_bias(dimension):\n    w = np.full((dimension,1),0.01)\n    b = 0.0\n    return w, b","metadata":{},"execution_count":null,"outputs":[]},{"cell_type":"code","source":"","metadata":{},"execution_count":null,"outputs":[]}]}